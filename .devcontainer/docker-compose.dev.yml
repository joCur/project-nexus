# DevContainer Docker Compose - Simplified for GitHub Codespaces
# Reuses existing service definitions from main docker-compose.yml

version: '3.8'

services:
  #######################
  # DevContainer Service
  #######################
  devcontainer:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    container_name: nexus-devcontainer
    volumes:
      # Mount the entire workspace for development
      - ..:/workspaces/project-nexus:cached
    environment:
      - NODE_ENV=development
      - DOCKER_ENV=true
      # Database connection to postgres service
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=nexus_db
      - POSTGRES_USER=nexus
      - POSTGRES_PASSWORD=nexus_secure_2024
      # Redis connection to redis service
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      # Server ports
      - BACKEND_PORT=3000
      - WEB_PORT=3001
    working_dir: /workspaces/project-nexus
    command: sleep infinity
    depends_on:
      - postgres
      - redis
    networks:
      - nexus-network

  #######################
  # PostgreSQL Database with pgvector (from main docker-compose.yml)
  #######################
  postgres:
    image: pgvector/pgvector:pg15
    container_name: nexus-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=nexus_db
      - POSTGRES_USER=nexus
      - POSTGRES_PASSWORD=nexus_secure_2024
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexus -d nexus_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  #######################
  # Redis Cache (from main docker-compose.yml)
  #######################
  redis:
    image: redis:7-alpine
    container_name: nexus-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nexus-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    command: >
      redis-server 
      --appendonly yes 
      --appendfsync everysec 
      --maxmemory 256mb 
      --maxmemory-policy allkeys-lru

  #######################
  # Adminer (Database Admin) - Auto-login for development
  #######################
  adminer:
    image: adminer:latest
    container_name: nexus-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=hydra
    volumes:
      # Auto-login script for development  
      - ./adminer-auto.php:/var/www/html/index.php:ro
    networks:
      - nexus-network
    depends_on:
      - postgres

  #######################
  # Redis Commander
  #######################
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: nexus-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin123
    networks:
      - nexus-network
    depends_on:
      - redis

#######################
# Networks
#######################
networks:
  nexus-network:
    driver: bridge

#######################
# Volumes
#######################
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local